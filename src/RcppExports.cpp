// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// alphpow
arma::mat alphpow(double x, arma::mat mat);
RcppExport SEXP repolr_alphpow(SEXP xSEXP, SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mat(matSEXP);
    __result = Rcpp::wrap(alphpow(x, mat));
    return __result;
END_RCPP
}
// cmat
List cmat(Rcpp::NumericVector ctimes, double alpha, Rcpp::String corrmod, Rcpp::String diffmeth, double h);
RcppExport SEXP repolr_cmat(SEXP ctimesSEXP, SEXP alphaSEXP, SEXP corrmodSEXP, SEXP diffmethSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type ctimes(ctimesSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type corrmod(corrmodSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type diffmeth(diffmethSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    __result = Rcpp::wrap(cmat(ctimes, alpha, corrmod, diffmeth, h));
    return __result;
END_RCPP
}
// hgmat
Rcpp::List hgmat(List mod, List smat, List cmat, Rcpp::List X, Rcpp::String modtype, Rcpp::String diffmeth);
RcppExport SEXP repolr_hgmat(SEXP modSEXP, SEXP smatSEXP, SEXP cmatSEXP, SEXP XSEXP, SEXP modtypeSEXP, SEXP diffmethSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< List >::type mod(modSEXP);
    Rcpp::traits::input_parameter< List >::type smat(smatSEXP);
    Rcpp::traits::input_parameter< List >::type cmat(cmatSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type X(XSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type modtype(modtypeSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type diffmeth(diffmethSEXP);
    __result = Rcpp::wrap(hgmat(mod, smat, cmat, X, modtype, diffmeth));
    return __result;
END_RCPP
}
// icormat
Rcpp::List icormat(List mod, List smat, List cmat, Rcpp::String modtype);
RcppExport SEXP repolr_icormat(SEXP modSEXP, SEXP smatSEXP, SEXP cmatSEXP, SEXP modtypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< List >::type mod(modSEXP);
    Rcpp::traits::input_parameter< List >::type smat(smatSEXP);
    Rcpp::traits::input_parameter< List >::type cmat(cmatSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type modtype(modtypeSEXP);
    __result = Rcpp::wrap(icormat(mod, smat, cmat, modtype));
    return __result;
END_RCPP
}
// ordgee
Rcpp::List ordgee(Rcpp::List mod, Rcpp::List icormat, Rcpp::List X, Rcpp::String modtype, Rcpp::NumericVector ctimes, unsigned int categories, unsigned int omaxit, double otol);
RcppExport SEXP repolr_ordgee(SEXP modSEXP, SEXP icormatSEXP, SEXP XSEXP, SEXP modtypeSEXP, SEXP ctimesSEXP, SEXP categoriesSEXP, SEXP omaxitSEXP, SEXP otolSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type mod(modSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type icormat(icormatSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type X(XSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type modtype(modtypeSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type ctimes(ctimesSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type categories(categoriesSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type omaxit(omaxitSEXP);
    Rcpp::traits::input_parameter< double >::type otol(otolSEXP);
    __result = Rcpp::wrap(ordgee(mod, icormat, X, modtype, ctimes, categories, omaxit, otol));
    return __result;
END_RCPP
}
// potest
Rcpp::List potest(Rcpp::List mod, Rcpp::List hgmat, Rcpp::List X, unsigned int categories, Rcpp::NumericVector ctimes);
RcppExport SEXP repolr_potest(SEXP modSEXP, SEXP hgmatSEXP, SEXP XSEXP, SEXP categoriesSEXP, SEXP ctimesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type mod(modSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type hgmat(hgmatSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type X(XSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type categories(categoriesSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type ctimes(ctimesSEXP);
    __result = Rcpp::wrap(potest(mod, hgmat, X, categories, ctimes));
    return __result;
END_RCPP
}
// smat
List smat(Rcpp::NumericVector coeff);
RcppExport SEXP repolr_smat(SEXP coeffSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type coeff(coeffSEXP);
    __result = Rcpp::wrap(smat(coeff));
    return __result;
END_RCPP
}
// upalpha
Rcpp::List upalpha(Rcpp::List hgmat, double alpha, Rcpp::String diffmeth, double h);
RcppExport SEXP repolr_upalpha(SEXP hgmatSEXP, SEXP alphaSEXP, SEXP diffmethSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type hgmat(hgmatSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type diffmeth(diffmethSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    __result = Rcpp::wrap(upalpha(hgmat, alpha, diffmeth, h));
    return __result;
END_RCPP
}
